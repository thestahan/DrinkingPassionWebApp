@page "/cocktails"
@using DrinkingPassionWebApp.Features.Cocktails.Store
@inherits FluxorComponent

@inject IDispatcher Dispatcher
@inject IState<PublicCocktailsState> PublicCocktailsState

@if (PublicCocktailsState.Value.IsLoading)
{
    <p><em>Loading...</em></p>
}
else
{
    if (PublicCocktailsState.Value.IsError)
    {
        <p><em>Something went wrong!</em></p>
        <p>@PublicCocktailsState.Value.ErrorMessage</p>
    }
    else
    {
        <MudGrid>
            @foreach (var cocktail in PublicCocktailsState.Value.Cocktails)
            {
                <MudItem xs="12" sm="6" lg="4">
                    <MudCard Outlined="true">
                        <MudCardMedia Image="@cocktail.Picture" Height="300" />
                        <MudCardContent>
                            <MudText Typo="Typo.h5">@cocktail.Name</MudText>
                                <MudText Typo="Typo.body2">Główny składnik: @cocktail.BaseIngredient</MudText>
                                <MudText Typo="Typo.body2">Liczba składników: @cocktail.IngredientsCount</MudText>
                        </MudCardContent>
                        <MudCardActions>
                            <MudButton Variant="Variant.Text" Color="Color.Primary">Szczegóły</MudButton>
                        </MudCardActions>
                    </MudCard>
                </MudItem>
            }
        </MudGrid>
    }
}

@code {
    protected override void OnInitialized()
    {
        if (!PublicCocktailsState.Value.IsLoading)
        {
            Dispatcher.Dispatch(new FetchPublicCocktailsAction());
        }

        base.OnInitialized();
    }
}